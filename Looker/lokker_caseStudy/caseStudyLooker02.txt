 Customer Lifetime Orders
The total number of orders that a customer has placed since first using the website.  Customers are typically analyzed in groupings rather than by the specific number of orders placed.  These groupings are:
1 Order
2 Orders
3-5 Orders
6-9 Orders
10+ Orders
-----------------------------------------------------------------------------------------------------------------------------------------------------

Customer Lifetime Revenue
The total amount of revenue brought in from an individual customer over the course of their patronage.  Lifetime revenue is often analyzed based on specific value groupings. These groupings are:
$0.00 - $4.99
$5.00 - $19.99
$20.00 - $49.99
$50.00 - $99.99
$100.00 - $499.99
$500.00 - $999.99
$1000.00 +
-------------------------------------------------------------------------------------------------------------------------------------------------------
Total Lifetime Orders
The total number of orders placed over the course of customers’ lifetimes.
--------------------------------------------------------------------------------------------------------------------
Average Lifetime Orders
The average number of orders that a customer places over the course of their lifetime as a customer.
---------------------------------------------------------------------------------------------------------------------
Total Lifetime Revenue
The total amount of revenue brought in over the course of customers’ lifetimes.
---------------------------------------------------------------------------------------------------------------------
Average Lifetime Revenue
The average amount of revenue that a customer brings in over the course of their lifetime as a customer.
---------------------------------------------------------------------------------------------------------------------
First Order Date
The date in which a customer placed his or her first order on the fashion.ly website
----------------------------------------------------------------------------------------------------------------------
Latest Order Date
The date in which a customer placed his or her most recent order on the fashion.ly website
----------------------------------------------------------------------------------------------------------------------
Is Active
Identifies whether a customer is active or not (has purchased from the website within the last 90 days)
-----------------------------------------------------------------------------------------------------------------------
Days Since Latest Order
The number of days since a customer placed his or her most recent order on the website
-------------------------------------------------------------------------------------------------------------------------
Average Days Since Latest Order
The average number of days since customers have placed their most recent orders on the websit
--------------------------------------------------------------------------------------------------------------------------
Repeat Customer
Identifies whether a customer was a repeat customer or not


--------------------------------------------------------------------------------------------------------------------------
# The name of this view in Looker is "Orders Vw"
view: orders_vw {
  # The sql_table_name parameter indicates the underlying database table
  # to be used for all fields in this view.
  sql_table_name: `poc-analytics-ai.sample_superstore.orders_vw`
    ;;
  drill_fields: [order_item_id]
  # This primary key is the unique key for this table in the underlying database.
  # You need to define a primary key in a view in order to join to other views.

  dimension: order_item_id {
    primary_key: yes
    type: number
    sql: ${TABLE}.id ;;
  }

  # Dates and timestamps can be represented in Looker using a dimension group of type: time.
  # Looker converts dates and timestamps to the specified timeframes within the dimension group.

  dimension_group: created {
    type: time
    timeframes: [
      raw,
      time,
      date,
      week,
      month,
      quarter,
      year
    ]
    sql: ${TABLE}.created_at ;;
    datatype: date
  }

  # Here's what a typical dimension looks like in LookML.
  # A dimension is a groupable field that can be used to filter query results.
  # This dimension will be called "Delivered At" in Explore.

  dimension: delivered_at {
    type: string
    sql: ${TABLE}.delivered_at ;;
  }

  dimension: inventory_item_id {
    type: number
    sql: ${TABLE}.inventory_item_id ;;
  }

  dimension: order_id {
    type: number
    sql: ${TABLE}.order_id ;;
  }

  dimension: returned_at {
    type: string
    sql: ${TABLE}.returned_at ;;
  }

  dimension: sale_price {
    type: number
    sql: ${TABLE}.sale_price ;;
  }

  # A measure is a field that uses a SQL aggregate function. Here are defined sum and average
  # measures for this dimension, but you can also add measures of many different aggregates.
  # Click on the type parameter to see all the options in the Quick Help panel on the right.

  measure: total_sale_price {
    type: sum
    sql: ${sale_price} ;;
  }

  measure: average_sale_price {
    type: average
    sql: ${sale_price} ;;
  }

  dimension: shipped_at {
    type: string
    sql: ${TABLE}.shipped_at ;;
  }

  dimension: status {
    type: string
    sql: ${TABLE}.status ;;
  }

  dimension: user_id {
    type: number
    sql: ${TABLE}.user_id ;;
  }

  measure: count {
    type: count
    drill_fields: [order_item_id]
  }
#################################################################################################
  
  dimension: customer_lifetime_orders {
    type: tier
    tiers: [1, 2, 3, 5, 6, 9, 10]
    style: integer
    sql: ${order_id} ;;
  }

------------------------------------------------------------------------------------------------------------------


  measure : total_life_time_orders{
    type :sum
    sql: ${order_item_id} ;;
  }
  measure: total_lifetime_revenue {
    type: sum
    value_format_name: usd
    sql: ${sale_price} ;;

  }
  measure: first_order_date{
    type: date
    sql: MIN(${created_date}) ;;

  }
  measure: latest_order_date{
    type: date
    sql: MAX(${created_date}) ;;
  }
  measure: is_active{
    type: yesno
    sql: DATE_DIFF(CURRENT_DATE(),DATE(${latest_order_date}),DAY)<=90 ;;
  }
  measure: days_since_latest_order{
    type: number
    sql: DATE_DIFF(CURRENT_DATE(),DATE(${latest_order_date}),DAY);;
  }


  measure: order_count {
    type: count_distinct
    sql: ${order_id} ;;
  }

  measure: repeat_customer{
    type: yesno
    sql: ${order_count}>1 ;;
    # COUNT(${order_id} > 1) ;;

  }


}

---------------------------------------------------------------------------------------------------------------------------------
------------------------------------------derived_table--------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------
  view:  derivedn_order {
    derived_table: {
      explore_source: orders_vw {
        column: days_since_latest_order {}
        column: order_count {}
        column: total_lifetime_revenue {}
        column: user_id {}
      }
    }
    measure: days_since_latest_order {
      description: ""
      type: average
    }
    measure: order_count {
      description: ""
      type: average
    }
    measure: total_lifetime_revenue {
      description: ""
      value_format: "$#,##0.00"
      type: average
    }
    dimension: user_id {
      description: ""
      type: number
      primary_key: yes
    }
	
	

    dimension: customer_lifetime_revenue {
      type: tier
      tiers: [0.00, 4.99, 5.00, 19.99, 20.00, 49.99, 50.00, 99.99, 100.00, 499.99, 500.00, 999.99, 1000.00]
      style: relational
      value_format_name: usd
      sql: ${TABLE}.total_lifetime_revenue ;;
    }
  }
